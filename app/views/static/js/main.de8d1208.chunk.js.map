{"version":3,"sources":["utils/constants.js","utils/strings.js","utils/helper.js","services/requestHelper.js","services/auth.service.js","services/auth-header.js","services/user.service.js","utils/models.js","utils/tableColumns.js","components/Curtain/index.js","components/TitleBar/index.js","components/Admin/index.js","services/issue.service.js","components/Home/index.js","components/Login/index.js","App.js","index.js"],"names":["OPTION_ALL","USER_TYPE","ISSUE_TYPE","ISSUE_COMPLETE_STATUS","ISSUE_ACTIONS","type","name","value","steps","totalTime","timeToOrange","timeToRed","TEXT_ALL","TEXT_USER_TYPE","MESSAGE","Option","Select","getAPIURL","window","location","origin","getOptions","itemList","hasAll","extraInfo","result","push","forEach","item","index","getUserPrivielgeText","privilege","checkPrivilege","target","getUserPrivielgeValues","values","getIssueType","issue","action","isAdmin","userList","id","user","getById","getSum","arr","sum","e","find","obj","isEmpty","str","trim","length","getToday","Date","setHours","getEndTime","startTime","timeStr","timeArr","split","endTime","currentDate","getDate","interval","parseInt","setDate","setMonth","getMonth","getTime","isTimeOut","getIssueCompleteStatus","status","startTimeArr","getIssueEndTime","completeTime","handleRedirect","err","msg","response","href","data","message","AUTH_URL","login","pwd","axios","post","res","accessToken","localStorage","setItem","JSON","stringify","Object","assign","Error","code","logout","removeItem","getCurrentUser","parse","getItem","authHeader","USER_URL","createUser","Promise","reject","headers","updateUser","userObj","put","updatePwd","oldPwd","newPwd","getAllUsers","get","users","deleteUser","delete","getUserModel","username","password","getIssueColumns","fnGetUserName","fnMarkComplete","fnMovetoNextStep","fnDeleteIssue","curUserId","title","dataIndex","key","width","render","_","record","ownerId","sorter","a","b","toLocaleDateString","icon","CheckOutlined","style","color","shape","onClick","ArrowRightOutlined","danger","DeleteOutlined","Curtain","cls","this","props","visible","className","SyncOutlined","spin","PureComponent","TitleBar","openPwdEditor","setState","modalVisible","pwdFormRef","current","setFieldsValue","confirm","handleUpdatePwd","getFieldsValue","error","currentUserId","success","handleCancelPwd","renderPwdModal","state","closable","footer","ref","labelCol","span","wrapperCol","initialValues","Item","label","rules","required","Password","offset","htmlType","React","createRef","showUserManagement","isHome","items","to","menu","minWidth","separator","placement","overlay","trigger","protTypes","PropTypes","bool","object","number","Modal","Admin","getAllUserList","showCurtain","filterUsers","tempUsers","newUsers","filter","includes","searchText","currentUsers","onSearch","openUserEditor","currentSelectedUserId","formRef","handleDeleteUser","ExclamationCircleOutlined","onOk","okText","cancelText","handleCreate","handleUpdate","curUser","resetStatus","handleCancel","renderContent","fnEditUser","fnDeleteUser","PlusOutlined","placeholder","allowClear","onChange","columns","ellipsis","text","val","EditOutlined","dataSource","rendeUserModal","currentUser","isNew","tooltip","Group","showEditor","currentSelectedUser","ISSUE_URL","createIssue","issueName","targetName","details","updateIssue","getAllIssues","issues","deleteIssue","Search","Input","RangePicker","DatePicker","Home","resetCounts","ownStatus","timeout","redRisk","orangeRisk","unComplete","complete","all","allStatus","getAllIssueList","issueList","isOwn","completeStatus","filterIssues","tempIssueList","filterStatus","issueType","newIssues","indexOf","moment","isBefore","isAfter","currentIssues","getUserNameById","openIssueEditor","issueModalVisible","issueFormRef","issueAction","onSearchIssueName","onIssueTypeChange","onActionFilterChange","onIssueStatusChange","onOwnerChange","onSearchTargetName","onStartTimeFilterChange","date","onEndTimeFilterChange","getAllUsersList","allusers","handleCreateIssue","valueOf","handleCancelIssue","handleMoveToNextStep","issueId","newStatus","handleMarkComplete","handleDeleteIssue","renderSummary","renderFilterSection","defaultValue","renderIssueTable","rowClassName","expandable","expandedRowRender","column","renderIssueModal","availableActions","getAvailableActions","Login","onFinish","onFinishFailed","console","log","autoComplete","App","path","element","replace","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.de8d1208.chunk.js","sourcesContent":["export const OPTION_ALL = -1\n\nexport const USER_TYPE = {\n    NORMAL: 0,\n    ADMIN: 1\n}\n\nexport const ISSUE_TYPE = {\n    NONE: 0,\n    XingShi: 1, // 刑事案件\n    XingZheng: 2 // 行政案件\n}\n\nexport const ISSUE_COMPLETE_STATUS = {\n    Complete: 0,\n    NoRisk: 1,\n    OrangeRisk: 2,\n    RedRisk: 3,\n    TimeOut: 4\n}\n\nexport const ISSUE_ACTIONS = [{\n    type: ISSUE_TYPE.XingShi,\n    name: '刑事拘留',\n    value: 0,\n    steps: [{\n        name: '刑事拘留',\n        totalTime: '3 D',\n        timeToOrange: '2 D',\n        timeToRed: '3 D'\n    }, {\n        name: '延长羁押期限',\n        totalTime: '27 D',\n        timeToOrange: '20 D',\n        timeToRed: '30 D'\n    }]\n}, {\n    type: ISSUE_TYPE.XingShi,\n    name: '取保候审',\n    value: 1,\n    steps: [{\n        name: '取保候审',\n        totalTime: '12 M',\n        timeToOrange: '9 M',\n        timeToRed: '12 M'\n    }]\n}, {\n    type: ISSUE_TYPE.XingShi,\n    name: '逮捕',\n    value: 2,\n    steps: [{\n        name: '逮捕',\n        totalTime: '2 M',\n        timeToOrange: '40 D',\n        timeToRed: '50 D'\n    }, {\n        name: '第一次延长羁押期限',\n        totalTime: '1 M',\n        timeToOrange: '10 D',\n        timeToRed: '20 D'\n    }, {\n        name: '第二次延长羁押期限',\n        totalTime: '2 M',\n        timeToOrange: '40 D',\n        timeToRed: '50 D'\n    }]\n}, {\n    type: ISSUE_TYPE.XingZheng,\n    name: '行政案件立案',\n    value: 3,\n    steps: [{\n        name: '行政调查',\n        totalTime: '180 D',\n        timeToOrange: '3 M',\n        timeToRed: '180 D'\n    }, {\n        name: '法制审查',\n        totalTime: '180 D',\n        timeToOrange: '1 M',\n        timeToRed: '180 D'\n    }]\n}]","export const TEXT_ALL = '所有'\n\nexport const TEXT_USER_TYPE = ['普通用户', '管理员']\n\nexport const TEXT_ISSUE_ACTION = ['刑事拘留', '取保候审', '逮捕', '行政案件立案']\n\nexport const MESSAGE = {\n    UnknownError: '未知错误，请刷新页面后重试！',\n    EmptyUserName: '用户名不能为空！',\n    EmptyOldPassword: '旧密码不能为空！',\n    EmptyNewPassword: '新密码不能为空!',\n    EmptyConfirmPassword: '请再次输入新密码！',\n    EmptyPassword: '密码不能为空！',\n    IncorrectOldPassword: '旧密码错误！',\n    InconsistentPassword: '两次新密码不同，请重新输入！',\n    DuplicateName: '该用户名已经被使用！',\n    CreateUserSuccess: '创建用户#成功！',\n    UpdateUserSuccess: '更新用户#成功！',\n    DeleteUserSuccess: '删除用户#成功！',\n    UpdatePwdSuccess: '更改密码成功!',\n\n    EmptyIssueName: '案件名称不能为空！',\n    EmptyIssueTarget: '案件对象不能为空！',\n    CreateIssueSuccess: '创建案件成功！',\n    UpdateIssueSuccess: '更新案件成功！',\n    DeleteIssueSuccess: '删除案件成功！',\n\n    Complete: '已完成',\n    NoRisk: '没有超时风险',\n    OrangeRisk: '橙色超时风险',\n    RedRisk: '红色超时风险',\n    TimeOut: '已超时',\n\n    NoPrivilege: '请联系管理员添加权限来查看页面内容。'\n}","import { Select } from \"antd\"\nimport { OPTION_ALL, ISSUE_TYPE, ISSUE_COMPLETE_STATUS, ISSUE_ACTIONS, USER_TYPE } from \"./constants\"\nimport { TEXT_ALL } from \"./strings\"\n\nconst { Option } = Select\n\nexport const getAPIURL = window.location.origin + '/api/'\n\nexport function getOptions(itemList = [], hasAll = true, extraInfo = null) {\n    const result = []\n    if (hasAll) {\n        result.push(<Option key={OPTION_ALL} value={OPTION_ALL}>{TEXT_ALL}</Option>)\n    }\n    itemList.forEach((item, index) => {\n        const name = item.name || item;\n        result.push(<Option key={name} value={item.value || index}>{name}</Option>)\n    })\n    if (extraInfo && extraInfo.name && extraInfo.value) {\n        result.push(<Option key={extraInfo.name} value={extraInfo.value}>{extraInfo.name}</Option>)\n    }\n    return result\n}\n\nexport function getUserPrivielgeText(privilege) {\n    switch (privilege) {\n        case ISSUE_TYPE.XingZheng:\n            return '行政案件'\n        case ISSUE_TYPE.XingShi:\n            return '刑事案件'\n        default:\n            return ''\n    }\n}\n\nexport function checkPrivilege(privilege, target) {\n    return (privilege & target) === target\n}\n\nexport function getUserPrivielgeValues(privilege) {\n    const values = []\n    if (checkPrivilege(privilege, ISSUE_TYPE.XingShi)) {\n        values.push(ISSUE_TYPE.XingShi)\n    }\n    if (checkPrivilege(privilege, ISSUE_TYPE.XingZheng)) {\n        values.push(ISSUE_TYPE.XingZheng)\n    }\n    return values\n}\n\nexport function getIssueType(issue) {\n    return ISSUE_ACTIONS[issue.action].type\n}\n\nexport function isAdmin(userList = [], id = '') {\n    const user = getById(userList, id)\n    return user && user.type === USER_TYPE.ADMIN\n}\n\nexport function getSum(arr = []) {\n    if (!arr.forEach) {\n        arr = []\n    }\n    let sum = 0\n    arr.forEach(e => sum += e)\n    return sum\n}\n\nexport function getById(arr = [], id) {\n    return arr.find(obj => obj.id === id)\n}\n\nexport function isEmpty(str = '') {\n    return str.trim().length === 0\n}\n\nexport function getToday() {\n    return new Date().setHours(0, 0, 0, 0)\n}\n\nfunction getEndTime(startTime, timeStr) {\n    const timeArr = timeStr.split(' ')\n    const endTime = new Date(startTime)\n    const currentDate = endTime.getDate()\n    const interval = parseInt(timeArr[0], 10)\n    if (timeArr[1] === 'D') {\n        endTime.setDate(currentDate + interval)\n    } else {\n        endTime.setMonth(endTime.getMonth() + interval)\n        if (endTime.getDate() !== currentDate) {\n            endTime.setDate(0)\n        }\n    }\n    endTime.setDate(endTime.getDate() - 1)\n    return endTime.getTime()\n}\n\nfunction isTimeOut(startTime, timeStr) {\n    return getEndTime(startTime, timeStr) <= getToday()\n}\n\nexport function getIssueCompleteStatus(issue) {\n    if (issue.status === -1) {\n        return ISSUE_COMPLETE_STATUS.Complete\n    }\n    const { totalTime, timeToOrange, timeToRed } = ISSUE_ACTIONS[issue.action].steps[issue.status]\n    const startTime = issue.startTimeArr[issue.status]\n    if (isTimeOut(startTime, totalTime)) {\n        return ISSUE_COMPLETE_STATUS.TimeOut\n    } else if (isTimeOut(startTime, timeToRed)) {\n        return ISSUE_COMPLETE_STATUS.RedRisk\n    } else if (isTimeOut(startTime, timeToOrange)) {\n        return ISSUE_COMPLETE_STATUS.OrangeRisk\n    } else {\n        return ISSUE_COMPLETE_STATUS.NoRisk\n    }\n}\n\nexport function getIssueEndTime(issue) {\n    if (issue.status === -1) {\n        return issue.completeTime\n    }\n    const { totalTime } = ISSUE_ACTIONS[issue.action].steps[issue.status]\n    const startTime = issue.startTimeArr[issue.status]\n    return getEndTime(startTime, totalTime)\n}\n\nexport function getAvailableActions(userList = [], id = '') {\n    const user = getById(userList, id)\n    if (user) {\n        return ISSUE_ACTIONS.filter(action => {\n            return checkPrivilege(user.privilege, action.type)\n        })\n    }\n    return []\n}\n","export function handleRedirect(err, msg) {\n    if (err && err.response) {\n        if (err.response.status === 401) {\n            window.location.href = '/login'\n            return\n        } else if ((err.response.data || {}).message) {\n            throw err.response.data.message\n        }\n    }\n    throw msg\n}","import axios from 'axios'\nimport { getAPIURL } from '../utils/helper'\nimport { handleRedirect } from './requestHelper'\n\nconst AUTH_URL = getAPIURL + 'auth/'\n\nexport async function login(name, pwd) {\n    try {\n        const res = await axios.post(AUTH_URL + 'login', { name, pwd })\n        if (res && res.data && res.data.accessToken) {\n            localStorage.setItem('user', JSON.stringify(res.data))\n            return res && res.data\n        }\n        throw Object.assign(new Error(''), { code: -1, msg: '未知服务器错误，请联系管理员重启服务器！'})\n    } catch (ex) {\n        throw ex\n    }\n}\n\nexport async function logout() {\n    localStorage.removeItem('user')\n    try {\n        await axios.post(AUTH_URL + 'logout')\n    } catch(err) {\n        handleRedirect(err, '成功登出！')\n    }\n}\n\nexport function getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user')) || {}\n}\n","import { getCurrentUser } from \"./auth.service\";\n\nexport default function authHeader() {\n    const user = getCurrentUser()\n\n    if (user && user.accessToken) {\n        return { 'x-access-token': user.accessToken }\n    } else {\n        return {}\n    }\n}\n","import axios from \"axios\";\nimport { ISSUE_TYPE, USER_TYPE } from \"../utils/constants\";\nimport { getAPIURL, isEmpty } from \"../utils/helper\";\n// import { userList } from \"../utils/mockData\";\nimport { MESSAGE } from \"../utils/strings\";\nimport authHeader from \"./auth-header\";\nimport { handleRedirect } from \"./requestHelper\";\n\nconst USER_URL = getAPIURL + 'user'\n\n// const allUsers = userList\n\nexport async function createUser(name = '', pwd = '', type = USER_TYPE.NORMAL, privilege = ISSUE_TYPE.NONE) {\n    // return axios.post(USER_URL, { name, pwd, privilege }, { headers: authHeader() })\n    try {\n        if (isEmpty(name)) {\n            return Promise.reject(MESSAGE.EmptyUserName)\n        }\n        if (isEmpty(pwd)) {\n            return Promise.reject(MESSAGE.EmptyPassword)\n        }\n        // const index = allUsers.findIndex(user => user.name.toLowerCase() === name.toLowerCase())\n        // if (index >= 0) {\n        //     return Promise.reject(MESSAGE.DuplicateName)\n        // }\n        // const newId = allUsers[allUsers.length - 1].id + 1\n        // allUsers.push({ id: newId, name, pwd, type, privilege})\n        // return Promise.resolve(MESSAGE.CreateUserSuccess.replace('#', name))\n        await axios.post(USER_URL, {\n            name,\n            pwd,\n            type,\n            privilege\n        }, {\n            headers: authHeader()\n        })\n        return '创建用户成功！'\n    } catch(err) {\n        handleRedirect(err, '创建用户失败，请刷新后重新尝试！')\n    }\n}\n\nexport async function updateUser(id = -1, name = '', pwd = '', type = USER_TYPE.NORMAL, privilege = ISSUE_TYPE.NONE) {\n    // return axios.put(USER_URL + id, { name, pwd, privilege }, { headers: authHeader() })\n    try {\n        if (id === -1) {\n            return Promise.reject(MESSAGE.UnknownError)\n        }\n        if (isEmpty(name)) {\n            return Promise.reject(MESSAGE.EmptyUserName)\n        }\n        // let index = allUsers.findIndex(user => user.name.toLowerCase() === name.toLowerCase() && user.id !== id)\n        // if (index >= 0) {\n        //     return Promise.reject(MESSAGE.DuplicateName)\n        // }\n        // index = allUsers.findIndex(user => user.id === id)\n        // if (index < 0) {\n        //     return Promise.reject(MESSAGE.UnknownError)\n        // }\n        let userObj = { name, type, privilege}\n        if (pwd !== '') {\n            userObj.pwd = pwd\n            // 密码为空表示不需要更新密码\n        }\n        // allUsers[index] = {id, name, pwd, type, privilege}\n        // return Promise.resolve(MESSAGE.UpdateUserSuccess.replace('#', name))\n        await axios.put(USER_URL + '/' + id, userObj, { headers: authHeader() })\n        return '更新用户信息成功！'\n    } catch(err) {\n        handleRedirect(err, '更新用户失败，请刷新后重新尝试！')\n    }\n}\n\nexport async function updatePwd(id = -1, oldPwd = '', newPwd = '') {\n    try {\n        if (id === -1) {\n            return Promise.reject(MESSAGE.UnknownError)\n        }\n        if (isEmpty(oldPwd)) {\n            return Promise.reject(MESSAGE.EmptyOldPassword)\n        }\n        if (isEmpty(newPwd)) {\n            return Promise.reject(MESSAGE.EmptyNewPassword)\n        }\n        // let index = allUsers.findIndex(user => user.id === id)\n        // if (index < 0) {\n        //     return Promise.reject(MESSAGE.UnknownError)\n        // }\n        // if (allUsers[index].pwd !== oldPwd) {\n        //     return Promise.reject(MESSAGE.IncorrectOldPassword)\n        // }\n        // allUsers[index].pwd = newPwd\n        // return Promise.resolve(MESSAGE.UpdatePwdSuccess)\n        await axios.put(USER_URL + '/updatePwd/' + id, {\n            oldPwd,\n            newPwd\n        }, { headers: authHeader() })\n        return '更改密码成功!'\n    } catch(err) {\n        handleRedirect(err, '更改密码失败，请刷新后重新尝试！')\n    }\n}\n\nexport async function getAllUsers() {\n    try {\n        const res = await axios.get(USER_URL, { headers: authHeader() })\n        return res && res.data && res.data.users || []\n    } catch(err) {\n        handleRedirect(err, '获取用户列表失败，请刷新页面重新尝试或联系管理员重启服务器！')\n    }\n\n    // allUsers.map(user => user.key = user.id)\n    // return Promise.resolve(allUsers)\n}\n\nexport async function deleteUser(id) {\n    try {\n        const res = await axios.delete(USER_URL + '/' + id, { headers: authHeader() })\n        return '删除用户成功'\n    } catch(err) {\n        handleRedirect(err, '删除用户失败，请刷新后重新尝试！')\n    }\n    // const index = allUsers.findIndex(user => user.id === id)\n    // if (index < 0) {\n    //     return Promise.reject(MESSAGE.UnknownError)\n    // }\n    // const name = allUsers[index].name\n    // allUsers.splice(index, 1)\n    // return Promise.resolve(MESSAGE.DeleteUserSuccess.replace('#', name))\n}","import moment from 'moment';\nimport { USER_TYPE } from \"./constants\";\nimport { getUserPrivielgeValues } from \"./helper\";\n\nexport function getUserModel(user) {\n    if (!user) {\n        user = {}\n    }\n    return {\n        username: user.name || '',\n        password: '',\n        type: user.type || USER_TYPE.NORMAL,\n        privilege: getUserPrivielgeValues(user.privilege)\n    }\n}\n\nexport function getIssueModel(issue) {\n    if (!issue) {\n        issue = {}\n    }\n    return {\n        issueName: issue.issueName || '',\n        targetName: issue.targetName || '',\n        issueAction: issue.action || 0,\n        status: issue.status || 0,\n        startTime: moment((issue.startTimeArr && issue.startTimeArr[0])) || moment(),\n        details: issue.details || ''\n    }\n}\n\nexport function getPwdModel() {\n    return {\n        oldPwd: '',\n        newPwd: '',\n        confirm: ''\n    }\n}","import { DeleteOutlined, EditOutlined, CheckOutlined, ArrowRightOutlined } from \"@ant-design/icons\"\nimport { Button, Space, Tag, Tooltip } from \"antd\"\nimport { ISSUE_ACTIONS, ISSUE_TYPE } from \"./constants\"\nimport { checkPrivilege, getUserPrivielgeText } from \"./helper\"\nimport { TEXT_USER_TYPE } from \"./strings\"\n\nexport function getUserColumns(fnEditUser, fnDeleteUser, curUserId) {\n    return [\n        { title: '用户名', dataIndex: 'name', key: 'name', ellipsis: true, render: (text) => (\n            <Tooltip title={text}>{text}</Tooltip>\n        ) },\n        { title: '用户类型', dataIndex: 'type', key: 'type', width: 150, render: val => TEXT_USER_TYPE[val] },\n        { title: '用户权限', dataIndex: 'privilege', key: 'privilege', width: 200, render: (_, record) => (\n            <>\n                {\n                    checkPrivilege(record.privilege, ISSUE_TYPE.XingShi) &&\n                    <Tag color=\"red\">{getUserPrivielgeText(ISSUE_TYPE.XingShi)}</Tag>\n                }\n                {\n                    checkPrivilege(record.privilege, ISSUE_TYPE.XingZheng) &&\n                    <Tag color=\"blue\">{getUserPrivielgeText(ISSUE_TYPE.XingZheng)}</Tag>\n                }\n            </>\n        )},\n        { title: '操作', key: 'action', width: 150, render: (_, record) => (\n            <Space>\n                <Button icon={<EditOutlined />} shape=\"cicle\" type=\"text\" onClick={e => fnEditUser(record.id)} />\n                {\n                    record.id !== curUserId &&\n                    <Button danger icon={<DeleteOutlined />} shape=\"circle\" type=\"text\" onClick={e => fnDeleteUser(record.id)} />\n                }\n            </Space>\n        )}\n    ]\n}\n\nexport function getIssueColumns(fnGetUserName, fnMarkComplete, fnMovetoNextStep, fnDeleteIssue, curUserId, isAdmin = false) {\n    return [\n        { title: '案件名称', dataIndex: 'issueName', key: 'issueName' },\n        { title: '负责人', width: 120, dataIndex: 'ownerId', key: 'ownerId', render: (_, record) => (\n            <span>{fnGetUserName(record.ownerId)}</span>\n        )},\n        { title: '采取措施', width: 120, dataIndex: 'action', key: 'action', render: (_, record) => (\n            <span>{ISSUE_ACTIONS[record.action].name}</span>\n        )},\n        { title: '状态', width: 180, dataIndex: 'issueStatus', key: 'issueStatus', render: (_, record) => (\n            <span>{\n                record.status === -1 ? '已完成' : ISSUE_ACTIONS[record.action].steps[record.status].name\n            }</span>\n        )},\n        { title: '截止日期', width: 120, dataIndex: 'endTime', key: 'endTime', sorter: (a, b) => a.endTime - b.endTime, render: (_, record) => (\n            <span>{\n                record.status === -1 ? '' : new Date(record.endTime).toLocaleDateString()\n            }</span>\n        )},\n        { title: '操作', width: 200, key: 'action', render: (_, record) => (\n\n            (isAdmin || record.ownerId === curUserId) &&\n            <Space>\n                {\n                    record.status !== -1 &&\n                    <Tooltip title=\"标记完成\">\n                        <Button icon={<CheckOutlined style={{color: 'green'}} />} shape=\"circle\" type=\"text\" onClick={e => fnMarkComplete(record.id)} />\n                    </Tooltip>\n                }\n                {\n                    record.status !== -1 && record.status < ISSUE_ACTIONS[record.action].steps.length - 1 &&\n                    <Tooltip title={'转到 ' + ISSUE_ACTIONS[record.action].steps[record.status + 1].name}>\n                        <Button icon={<ArrowRightOutlined />} shape=\"circle\" type=\"text\" onClick={e => fnMovetoNextStep(record.id)} />\n                    </Tooltip>\n                }\n                <Tooltip title=\"删除\">\n                    <Button danger icon={<DeleteOutlined />} shape=\"circle\" type=\"text\" onClick={e => fnDeleteIssue(record.id)} />\n                </Tooltip>\n            </Space>\n        )}\n    ]\n}\n","import { SyncOutlined } from \"@ant-design/icons\";\nimport { PureComponent } from \"react\";\n\nimport './styles.scss'\n\nclass Curtain extends PureComponent {\n    render() {\n        const { visible } = this.props\n        const cls = visible ? 'showCurtain' : 'hideCurtain'\n        return (\n            <div className={cls}>\n                <SyncOutlined spin />\n            </div>\n        )\n    }\n}\n\nexport default Curtain","import { Button, Breadcrumb, Dropdown, Form, Input, Menu, message, Modal, Space } from \"antd\";\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUser, logout } from \"../../services/auth.service\";\nimport { USER_TYPE } from \"../../utils/constants\";\nimport { getById } from \"../../utils/helper\";\nimport { getPwdModel } from \"../../utils/models\";\nimport { MESSAGE } from \"../../utils/strings\";\nimport { updatePwd } from \"../../services/user.service\";\n\nimport './styles.scss';\n\nclass TitleBar extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.pwdFormRef = React.createRef()\n        this.state = {\n            modalVisible: false\n        }\n    }\n\n    openPwdEditor = () => {\n        this.setState({ modalVisible: true })\n        if (this.pwdFormRef.current) {\n            this.pwdFormRef.current.setFieldsValue(getPwdModel())\n        }\n    }\n\n    handleUpdatePwd = async () => {\n        const value = this.pwdFormRef.current.getFieldsValue()\n        if (value.newPwd !== value.confirm) {\n            message.error(MESSAGE.InconsistentPassword)\n            return\n        }\n        try {\n            const msg = await updatePwd(this.props.currentUserId, value.oldPwd, value.newPwd)\n            message.success(msg)\n            this.setState({ modalVisible: false })\n        } catch(msg) {\n            message.error(msg)\n        }\n    }\n\n    handleCancelPwd = () => {\n        this.setState({ modalVisible: false })\n    }\n\n    renderPwdModal = () => {\n        const { modalVisible } = this.state\n        return (\n            <Modal closable={false} className=\"pwdModal\" title=\"更改密码\" visible={modalVisible} footer={null}>\n                <Form ref={this.pwdFormRef} labelCol={{span: 6}} wrapperCol={{span: 14}} initialValues={{\n                    oldPwd: '',\n                    newPwd: '',\n                    confirm: ''\n                }}>\n                    <Form.Item label=\"旧密码：\" name=\"oldPwd\" rules={[{\n                        required: true,\n                        message: MESSAGE.EmptyOldPassword\n                    }]}>\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item label=\"新密码：\" name=\"newPwd\" rules={[{\n                        required: true,\n                        message: MESSAGE.EmptyNewPassword\n                    }]}>\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item label=\"再次输入密码：\" name=\"confirm\" rules={[{\n                        required: true,\n                        message: MESSAGE.EmptyConfirmPassword\n                    }]}>\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item className=\"buttons\" wrapperCol={{offset: 5, span: 15}}>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={ this.handleUpdatePwd }>{'更新'}</Button>\n                        <Button htmlType=\"button\" onClick={this.handleCancelPwd}>取消</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n\n    render() {\n        const { showUserManagement, isHome, userList, currentUserId } = this.props\n        const user = getById(userList, currentUserId) || {}\n        const items = [{\n            label: <span onClick={this.openPwdEditor}>更改密码</span>,\n            key: '0'\n        }]\n        if (showUserManagement && user.type === USER_TYPE.ADMIN) {\n            items.push({\n                label: <Link to={'/admin'}>管理用户</Link>,\n                key: '1'\n            })\n        }\n        items.push({\n            label: <span onClick={logout}>退出登录</span>,\n            key: '2'\n        })\n        const menu = (\n            <Menu style={{minWidth: 80}} items={items} />\n        )\n        return (\n            <>\n                <div className=\"titlebar\">\n                    <div className=\"title\">金华海关案件管理系统</div>\n                </div>\n                <div className=\"pathbar\">\n                    <div>\n                        {\n                            <Breadcrumb className=\"path\" separator='>'>\n                                <Breadcrumb.Item>\n                                    <Link to={'/home'}>主页</Link>\n                                </Breadcrumb.Item>\n                                {!isHome && <Breadcrumb.Item>用户管理</Breadcrumb.Item>}\n                            </Breadcrumb>\n                        }\n                    </div>\n                    <div className=\"right\">\n                        <span>欢迎你，</span>\n                        <Dropdown placement=\"bottomRight\" overlay={menu} trigger={['hover']}>\n                            <Space>{user.name}</Space>\n                        </Dropdown>\n                    </div>\n                </div>\n                { this.renderPwdModal() }\n            </>\n        )\n    }\n}\n\nTitleBar.protTypes = {\n    showUserManagement: PropTypes.bool,\n    isHome: PropTypes.bool,\n    userList: PropTypes.object,\n    currentUserId: PropTypes.number\n}\n\nexport default TitleBar\n","import { ExclamationCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Table, Modal, Input, Form, message, Radio, Checkbox } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport React, { PureComponent } from \"react\";\nimport { getCurrentUser } from \"../../services/auth.service\";\nimport { createUser, deleteUser, getAllUsers, updateUser } from \"../../services/user.service\";\nimport { ISSUE_TYPE, USER_TYPE } from \"../../utils/constants\";\nimport { getById, getSum, getUserPrivielgeText, getUserPrivielgeValues } from \"../../utils/helper\";\n// import { curUserId } from \"../../utils/mockData\";\nimport { getUserModel } from \"../../utils/models\";\nimport { MESSAGE, TEXT_USER_TYPE } from \"../../utils/strings\";\nimport { getUserColumns } from \"../../utils/tableColumns\";\nimport Curtain from \"../Curtain\";\nimport TitleBar from \"../TitleBar\";\n\nimport './styles.scss'\n\nconst { confirm } = Modal\n\nclass Admin extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.formRef = React.createRef()\n        this.state = {\n            showEditor: false,\n            showCurtain: false,\n            users: [],\n            currentUsers: []\n        }\n        this.currentUserId = getCurrentUser().id\n        this.currentSelectedUserId = -1\n        this.searchText = ''\n    }\n\n    async componentDidMount() {\n        await this.getAllUserList()\n    }\n\n    getAllUserList = async () => {\n        try {\n            this.setState({ showCurtain: true })\n            const users = await getAllUsers()\n            this.setState({ users })\n            this.filterUsers(users)\n        } catch (msg) {\n            message.error(msg)\n        } finally {\n            this.setState({ showCurtain: false })\n        }\n    }\n\n    filterUsers = (tempUsers) => {\n        const userlist = tempUsers ? tempUsers : this.state.users\n        const newUsers = userlist.filter(user => user.name.includes(this.searchText))\n        this.setState({ currentUsers: newUsers })\n    }\n\n    onSearch = (e) => {\n        this.searchText = e.target ? e.target.value : e\n        this.filterUsers()\n    }\n\n    openUserEditor = (id = -1) => {\n        this.currentSelectedUserId = id\n        this.setState({ modalVisible: true })\n        if (this.formRef.current) {\n            const user = this.state.users.find(user => user.id === id)\n            this.formRef.current.setFieldsValue(getUserModel(user))\n        }\n    }\n\n    handleDeleteUser = (id) => {\n        const user = getById(this.state.users, id)\n        if (user) {\n            confirm({\n                title: '是否确定删除用户 ' + user.name,\n                icon: <ExclamationCircleOutlined />,\n                onOk: async () => {\n                    try {\n                        this.setState({ showCurtain: true })\n                        const msg = await deleteUser(id)\n                        message.success(msg)\n                        await this.getAllUserList()\n                    } catch(msg) {\n                        message.error(msg)\n                    } finally {\n                        this.setState({ showCurtain: false })\n                    }\n                },\n                okText: '确认',\n                cancelText: '取消'\n            })\n        } else {\n            message.error(MESSAGE.UnknownError)\n        }\n        \n    }\n\n    handleCreate = async () => {\n        const value = this.formRef.current.getFieldsValue()\n        try {\n            this.setState({ showCurtain: true })\n            const msg = await createUser(value.username, value.password, value.type, getSum(value.privilege))\n            message.success(msg)\n            this.setState({ modalVisible: false })\n            this.currentSelectedUserId = -1\n            await this.getAllUserList()\n        } catch(msg) {\n            message.error(msg)\n        } finally {\n            this.setState({ showCurtain: false })\n        }\n    }\n\n    handleUpdate = async () => {\n        const curUser = getById(this.state.users, this.currentSelectedUserId)\n        if (this.currentSelectedUserId < 0 || !curUser) {\n            message.error('更新用户信息发生错误，请刷新页面后重试！')\n            return\n        }\n        const value = this.formRef.current.getFieldsValue()\n        try {\n            this.setState({ showCurtain: true })\n            const msg = await updateUser(curUser.id, value.username, value.password, value.type, getSum(value.privilege))\n            message.success(msg)\n            this.setState({ modalVisible: false })\n            this.resetStatus()\n            const users = await getAllUsers()\n            const newUsers = users.filter((user) => user.name.includes(this.searchText))\n            this.setState({\n                users,\n                currentUsers: newUsers\n            })\n        } catch (msg) {\n            message.error(msg)\n        } finally {\n            this.setState({ showCurtain: false })\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({ modalVisible: false })\n    }\n\n    resetStatus = () => {\n        this.currentSelectedUserId = -1\n    }\n\n    renderContent = () => {\n        const { currentUsers, users } = this.state\n        return (\n            <div className=\"main\">\n                <div className=\"header\">\n                    <div>用户列表</div>\n                    <Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={ e => this.openUserEditor()}>添加新用户</Button>\n                </div>\n                <div className=\"searchbar\">\n                    <Search placeholder=\"搜索用户名\" allowClear onChange={this.onSearch} onSearch={this.onSearch} />\n                    <span>当前共有 {users.length} 名用户</span>\n                </div>\n                <Table columns={getUserColumns(this.openUserEditor, this.handleDeleteUser, this.currentUserId)} dataSource={currentUsers} />\n            </div>\n        )\n    }\n\n    rendeUserModal = (currentUser) => {\n        const { modalVisible } = this.state\n        const isNew = this.currentSelectedUserId === -1\n        return (\n            <Modal closable={false} className=\"createModal\" title={isNew ? '添加新用户' : '更改用户信息'} visible={modalVisible} footer={null}>\n                <Form ref={this.formRef} labelCol={{span: 7}} wrapperCol={{span: 15}} initialValues={{\n                    username: isNew ? '' : currentUser.name,\n                    password: '',\n                    type: isNew ? USER_TYPE.NORMAL : currentUser.type,\n                    privilege: getUserPrivielgeValues(currentUser.privilege)\n                }}>\n                    <Form.Item label=\"用户名: \" name=\"username\" rules={[{\n                        required: true,\n                        message: '用户名不能为空！'\n                    }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item label=\"密码: \" name=\"password\" rules={ isNew ? [{\n                        required: true,\n                        message: '密码不能为空！'\n                    }] : []} tooltip={isNew ? null : '如果不打算更改密码，此处留空即可。'}>\n                        <Input.Password  />\n                    </Form.Item>\n                    <Form.Item label=\"用户类别: \" name=\"type\">\n                        <Radio.Group>\n                            <Radio value={USER_TYPE.NORMAL}>{TEXT_USER_TYPE[USER_TYPE.NORMAL]}</Radio>\n                            <Radio value={USER_TYPE.ADMIN}>{TEXT_USER_TYPE[USER_TYPE.ADMIN]}</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item label=\"可查看的案件: \" name=\"privilege\">\n                        <Checkbox.Group>\n                            <Checkbox value={ISSUE_TYPE.XingShi}>{getUserPrivielgeText(ISSUE_TYPE.XingShi)}</Checkbox>\n                            <Checkbox value={ISSUE_TYPE.XingZheng}>{getUserPrivielgeText(ISSUE_TYPE.XingZheng)}</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item className=\"buttons\" wrapperCol={{offset: 5, span: 15}}>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={ isNew ? this.handleCreate : this.handleUpdate }>{isNew ? '创建' : '更新'}</Button>\n                        <Button htmlType=\"button\" onClick={this.handleCancel}>取消</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n\n    render() {\n        const { showCurtain, users } = this.state\n        if (users.length === 0) {\n            return null\n        }\n        const currentUser = getById(users, this.currentUserId) || {}\n        const currentSelectedUser = getById(users, this.currentSelectedUserId) || {}\n        return (\n            <>\n                <TitleBar isHome={false} showUserManagement={false} currentUserId={this.currentUserId} userList={users} />\n                {\n                    currentUser.type !== USER_TYPE.ADMIN ?\n                    <div className=\"noPrivilege\">{MESSAGE.NoPrivilege}</div> :\n                    (\n                        <>\n                            {this.renderContent()}\n                            {this.rendeUserModal(currentSelectedUser)}\n                        </>\n                    )\n                }\n                <Curtain visible={showCurtain} />\n            </>\n        )\n    }\n}\n\nexport default Admin\n","import axios from \"axios\";\nimport { getAPIURL, isEmpty } from \"../utils/helper\";\n// import { getRandomIssue } from \"../utils/mockData\";\nimport { MESSAGE } from \"../utils/strings\";\nimport authHeader from \"./auth-header\";\nimport { handleRedirect } from \"./requestHelper\";\n\nconst ISSUE_URL = getAPIURL + 'issue'\n\n// const allIssues = getRandomIssue()\n\nexport async function createIssue(issueName, action, targetName, ownerId, status, startTime, details) {\n    try {\n        if (isEmpty(issueName)) {\n            return Promise.reject(MESSAGE.EmptyIssueName)\n        }\n        if (isEmpty(targetName)) {\n            return Promise.reject(MESSAGE.EmptyIssueTarget)\n        }\n        // const newId = allIssues[allIssues.length - 1].id + 1\n        // allIssues.push({ id: newId, issueName, action, targetName, ownerId, status, startTimeArr: [startTime], completeTime: null, details})\n        // return Promise.resolve(MESSAGE.CreateIssueSuccess.replace('#', issueName))\n        await axios.post(ISSUE_URL, {\n            issueName,\n            action,\n            targetName,\n            ownerId,\n            status,\n            startTimeArr: [startTime],\n            endTime: null,\n            details\n        }, {\n            headers: authHeader()\n        })\n        return '添加案件成功！'\n    } catch (err) {\n        handleRedirect(err, '添加案件失败，请刷新后重试！')\n    }\n}\n\nexport async function updateIssue(id = -1, issueName, action, targetName, ownerId, status, startTimeArr, completeTime, details) {\n    try {\n        if (id === -1) {\n            return Promise.reject(MESSAGE.UnknownError)\n        }\n        if (isEmpty(issueName)) {\n            return Promise.reject(MESSAGE.EmptyIssueName)\n        }\n        if (isEmpty(targetName)) {\n            return Promise.reject(MESSAGE.EmptyIssueTarget)\n        }\n        // let index = allIssues.findIndex(issue => issue.id === id)\n        // if (index < 0) {\n        //     return Promise.reject(MESSAGE.UnknownError)\n        // }\n        // allIssues[index] = { id, issueName, action, targetName, ownerId, status, startTimeArr, completeTime, details }\n        // return Promise.resolve(MESSAGE.UpdateIssueSuccess.replace('#', issueName))\n        await axios.put(ISSUE_URL + '/' + id, {\n            issueName,\n            action,\n            targetName,\n            ownerId,\n            status,\n            startTimeArr,\n            completeTime,\n            details\n        }, {\n            headers: authHeader()\n        })\n        return '更新案件成功！'\n    } catch (err) {\n        handleRedirect(err, '更新案件失败，请刷新后重试！')\n    }\n}\n\nexport async function getAllIssues() {\n    // return Promise.resolve(allIssues)\n    try {\n        const res = await axios.get(ISSUE_URL, { headers: authHeader() })\n        return res && res.data && res.data.issues || []\n    } catch (err) {\n        handleRedirect(err, '获取案件列表失败，请刷新页面重新尝试或联系管理员重启服务器！')\n    }\n}\n\nexport async function deleteIssue(id) {\n    // const index = allIssues.findIndex(issue => issue.id === id)\n    // if (index < 0) {\n    //     return Promise.reject(MESSAGE.UnknownError)\n    // }\n    // const name = allIssues[index].issueName\n    // allIssues.splice(index, 1)\n    // return Promise.resolve(MESSAGE.DeleteIssueSuccess.replace('#', name))\n    try {\n        await axios.delete(ISSUE_URL + '/' + id, { headers: authHeader() })\n        return '删除案件成功！'\n    } catch (err) {\n        handleRedirect(err, '删除案件失败，请刷新后重新尝试!')\n    }\n}","import { ExclamationCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Row, Col, Descriptions, Button, Select, DatePicker, Table, Modal, Form, Input, message } from \"antd\";\nimport moment from 'moment';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { PureComponent } from \"react\";\nimport { ISSUE_ACTIONS, ISSUE_COMPLETE_STATUS, OPTION_ALL } from \"../../utils/constants\";\nimport { getAvailableActions, getById, getIssueCompleteStatus, getIssueEndTime, getIssueType, getOptions, getToday, isAdmin, isEmpty } from \"../../utils/helper\";\nimport { getIssueColumns } from \"../../utils/tableColumns\";\nimport TitleBar from \"../TitleBar\";\n\nimport './styles.scss'\nimport { createIssue, deleteIssue, getAllIssues, updateIssue } from \"../../services/issue.service\";\nimport { getAllUsers } from \"../../services/user.service\";\nimport { getIssueModel } from \"../../utils/models\";\nimport { MESSAGE, TEXT_ALL } from \"../../utils/strings\";\n// import { curUserId } from \"../../utils/mockData\";\nimport Curtain from \"../Curtain\";\nimport { getCurrentUser } from \"../../services/auth.service\";\n\nconst { Option } = Select\nconst { Search } = Input\nconst { confirm } = Modal\nconst { RangePicker } = DatePicker\n\nclass Home extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.currentUserId = getCurrentUser().id\n        this.issueFormRef = React.createRef()\n        this.state = {\n            issueModalVisible: false,\n            showCurtain: false,\n            users: [],\n            issueList: [],\n            currentIssues: []\n        }\n        this.filterStatus = {\n            issueName: '',\n            issueType: -1,\n            action: -1,\n            completeStatus: -1,\n            ownerId: -1,\n            targetName: '',\n            startTime: null,\n            endTime: null\n        }\n        this.resetCounts()\n    }\n\n    async componentDidMount() {\n        await this.getAllIssueList()\n        const users = await getAllUsers()\n        this.setState({ users })\n    }\n\n    resetCounts = () => {\n        this.ownStatus = {\n            timeout: 0,\n            redRisk: 0,\n            orangeRisk: 0,\n            unComplete: 0,\n            complete: 0,\n            all: 0\n        }\n        this.allStatus = {\n            timeout: 0,\n            redRisk: 0,\n            orangeRisk: 0,\n            unComplete: 0,\n            complete: 0,\n            all: 0\n        }\n    }\n\n    getAllIssueList = async () => {\n        try {\n            this.setState({ showCurtain: true })\n            const issueList = await getAllIssues()\n            this.resetCounts()\n            issueList.forEach(issue => {\n                issue.key = issue.id\n                issue.type = getIssueType(issue)\n                issue.startTime = parseInt(issue.startTimeArr[0], 10)\n                if (issue.status === -1) {\n                    issue.completeTime = parseInt(issue.completeTime, 10)\n                }\n                issue.endTime = getIssueEndTime(issue)\n                const isOwn = issue.ownerId === this.currentUserId\n                const completeStatus = getIssueCompleteStatus(issue)\n                issue.completeStatus = completeStatus\n                if (completeStatus === ISSUE_COMPLETE_STATUS.Complete) {\n                    this.allStatus.complete++\n                    if (isOwn) this.ownStatus.complete++\n                } else {\n                    this.allStatus.unComplete++\n                    if (isOwn) this.ownStatus.unComplete++\n                    if (completeStatus === ISSUE_COMPLETE_STATUS.TimeOut) {\n                        this.allStatus.timeout++\n                        if (isOwn) this.ownStatus.timeout++\n                    } else if (completeStatus === ISSUE_COMPLETE_STATUS.RedRisk) {\n                        this.allStatus.redRisk++\n                        if (isOwn) this.ownStatus.redRisk++\n                    } else if (completeStatus === ISSUE_COMPLETE_STATUS.OrangeRisk) {\n                        this.allStatus.orangeRisk++\n                        if (isOwn) this.ownStatus.orangeRisk++\n                    }\n                }\n            })\n            this.setState({ issueList })\n            this.ownStatus.all = this.ownStatus.complete + this.ownStatus.unComplete\n            this.allStatus.all = this.allStatus.complete + this.allStatus.unComplete\n            this.filterIssues(issueList)\n        } catch (msg) {\n            message.error(msg)\n        } finally {\n            this.setState({ showCurtain: false })\n        }\n    }\n\n    filterIssues = (tempIssueList) => {\n        const issueList = tempIssueList ? tempIssueList : this.state.issueList\n        const { issueName, issueType, action, completeStatus, ownerId, targetName, startTime, endTime} = this.filterStatus\n        const newIssues = issueList.filter(issue => {\n            if (!isEmpty(issueName) && issue.issueName.indexOf(issueName) < 0) {\n                return false\n            }\n            if (issueType !== -1 && issue.type !== issueType) {\n                return false\n            }\n            if (action !== -1 && issue.action !== action) {\n                return false\n            }\n            if (completeStatus !== -1 && issue.completeStatus !== completeStatus) {\n                return false\n            }\n            if (ownerId !== -1 && issue.ownerId !== ownerId) {\n                return false\n            }\n            if (!isEmpty(targetName) && issue.targetName.indexOf(targetName) < 0) {\n                return false\n            }\n            if (startTime !== null && (startTime.length !== 2 || moment(issue.startTime).isBefore(startTime[0]) ||\n                moment(issue.startTime).isAfter(startTime[1]))) {\n                return false\n            }\n            if (endTime !== null && (endTime.length !== 2 || moment(issue.endTime).isBefore(endTime[0]) ||\n                moment(issue.endTime).isAfter(endTime[1]))) {\n                    return false\n            }\n            return true\n        })\n        this.setState({ currentIssues: newIssues })\n    }\n\n    getUserNameById = (id) => {\n        return (this.state.users.find((user) => user.id === id) || {}).name || ''\n    }\n\n    openIssueEditor = () => {\n        this.setState({ issueModalVisible: true })\n        if (this.issueFormRef.current) {\n            this.issueFormRef.current.setFieldsValue(getIssueModel())\n        }\n    }\n\n    onSearchIssueName = (e) => {\n        this.filterStatus.issueName = e.target ? e.target.value : e\n        this.filterIssues()\n    }\n\n    onIssueTypeChange = (value) => {\n        this.filterStatus.issueType = value\n        this.filterIssues()\n    }\n\n    onActionFilterChange = (value) => {\n        this.filterStatus.action = value\n        this.filterIssues()\n    }\n\n    onIssueStatusChange = (value) => {\n        this.filterStatus.completeStatus = value\n        this.filterIssues()\n    }\n\n    onOwnerChange = (value) => {\n        this.filterStatus.ownerId = value\n        this.filterIssues()\n    }\n\n    onSearchTargetName = (e) => {\n        this.filterStatus.targetName = e.target ? e.target.value : e\n        this.filterIssues()\n    }\n\n    onStartTimeFilterChange = (date) => {\n        this.filterStatus.startTime = date\n        this.filterIssues()\n    }\n\n    onEndTimeFilterChange = (date) => {\n        this.filterStatus.endTime = date\n        this.filterIssues()\n    }\n\n    getAllUsersList = () => {\n        const allusers = [<Option key={OPTION_ALL} value={OPTION_ALL}>{TEXT_ALL}</Option>]\n        this.state.users.forEach(user => {\n            allusers.push(<Option key={user.id} value={user.id}>{user.name}</Option>)\n        })\n        return allusers\n    }\n\n    handleCreateIssue = async () => {\n        const value = this.issueFormRef.current.getFieldsValue()\n        try {\n            this.setState({ showCurtain: true })\n            const msg = await createIssue(value.issueName, value.action, value.targetName, this.currentUserId, 0, value.startTime.valueOf(), value.details)\n            message.success(msg)\n            this.setState({ issueModalVisible: false })\n            await this.getAllIssueList()\n        } catch(msg) {\n            message.error(msg)\n        } finally {\n            this.setState({ showCurtain: false })\n        }\n    }\n\n    handleCancelIssue = () => {\n        this.setState({\n            issueModalVisible: false\n        })\n    }\n\n    handleMoveToNextStep = (issueId) => {\n        const issue = getById(this.state.issueList, issueId)\n        if (issue) {\n            confirm({\n                title: '是否确认将该案件移至下一阶段',\n                icon: <ExclamationCircleOutlined />,\n                onOk: async () => {\n                    try {\n                        this.setState({ showCurtain: true })\n                        let newStatus = issue.status + 1\n                        if (newStatus >= ISSUE_ACTIONS[issue.action].steps.length) {\n                            newStatus = -1\n                        }\n                        const timeArr = issue.startTimeArr\n                        timeArr.push(getToday())\n                        const msg = await updateIssue(issueId, issue.issueName, issue.action, issue.targetName, issue.ownerId, newStatus, timeArr, issue.details)\n                        message.success(msg)\n                        await this.getAllIssueList()\n                    } catch(msg) {\n                        message.error(msg)\n                    } finally {\n                        this.setState({ showCurtain: false })\n                    }\n                },\n                okText: '确认',\n                cancelText: '取消'\n            })\n        } else {\n            message.error(MESSAGE.UnknownError)\n        }\n    }\n\n    handleMarkComplete = (issueId) => {\n        const issue = getById(this.state.issueList, issueId)\n        if (issue) {\n            confirm({\n                title: '是否确定将该案件标记完成',\n                icon: <ExclamationCircleOutlined />,\n                onOk: async () => {\n                    try {\n                        this.setState({ showCurtain: true })\n                        const msg = await updateIssue(issueId, issue.issueName, issue.action, issue.targetName, issue.ownerId, -1, issue.startTimeArr, issue.details)\n                        message.success(msg)\n                        await this.getAllIssueList()\n                    } catch(msg) {\n                        message.error(msg)\n                    } finally {\n                        this.setState({ showCurtain: false })\n                    }\n                },\n                okText: '确认',\n                cancelText: '取消'\n            })\n        } else {\n            message.error(MESSAGE.UnknownError)\n        }\n    }\n\n    handleDeleteIssue = (issueId) => {\n        confirm({\n            title: '是否确定删除该案件',\n            icon: <ExclamationCircleOutlined />,\n            onOk: async () => {\n                try {\n                    this.setState({ showCurtain: true })\n                    const msg = await deleteIssue(issueId)\n                    message.success(msg)\n                    await this.getAllIssueList()\n                } catch(msg) {\n                    message.error(msg)\n                } finally {\n                    this.setState({ showCurtain: false })\n                }\n            },\n            okText: '确认',\n            cancelText: '取消'\n        })\n    }\n\n    renderSummary = () => {\n        return (\n            <div className=\"summary\">\n                <Row>\n                    <Col className=\"title\" span={6}></Col>\n                    <Col className=\"timeout\" span={3}>超时未完成</Col>\n                    <Col className=\"redRisk\" span={3}>红色警告</Col>\n                    <Col className=\"orangeRisk\" span={3}>橙色警告</Col>\n                    <Col className=\"uncomplete\" span={3}>所有未完成</Col>\n                    <Col className=\"complete\" span={3}>已完成</Col>\n                    <Col className=\"all\" span={3}>总数</Col>\n                </Row>\n                <Row>\n                    <Col className=\"name\" span={6}>你名下的案件</Col>\n                    <Col className=\"timeout\" span={3}>{this.ownStatus.timeout}</Col>\n                    <Col className=\"redRisk\" span={3}>{this.ownStatus.redRisk}</Col>\n                    <Col className=\"orangeRisk\" span={3}>{this.ownStatus.orangeRisk}</Col>\n                    <Col className=\"uncomplete\" span={3}>{this.ownStatus.unComplete}</Col>\n                    <Col className=\"complete\" span={3}>{this.ownStatus.complete}</Col>\n                    <Col className=\"all\" span={3}>{this.ownStatus.all}</Col>\n                </Row>\n                <Row>\n                    <Col className=\"name\" span={6}>所有案件</Col>\n                    <Col className=\"timeout\" span={3}>{this.allStatus.timeout}</Col>\n                    <Col className=\"redRisk\" span={3}>{this.allStatus.redRisk}</Col>\n                    <Col className=\"orangeRisk\" span={3}>{this.allStatus.orangeRisk}</Col>\n                    <Col className=\"uncomplete\" span={3}>{this.allStatus.unComplete}</Col>\n                    <Col className=\"complete\" span={3}>{this.allStatus.complete}</Col>\n                    <Col className=\"all\" span={3}>{this.allStatus.all}</Col>\n                </Row>\n            </div>\n        )\n    }\n\n    renderFilterSection = () => {\n        return (\n            <Descriptions className=\"filters\">\n                <Descriptions.Item label=\"案件名称\">\n                    <Search placeholder=\"搜索案件名称\" allowClear onChange={this.onSearchIssueName} onSearch={this.onSearchIssueName} />\n                </Descriptions.Item>\n                <Descriptions.Item label=\"案件类型\">\n                    <Select defaultValue={OPTION_ALL} onChange={this.onIssueTypeChange}>\n                        { getOptions([{ name: '刑事案件', value: 1 }, { name: '行政案件', value: 2 }]) }\n                    </Select>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"采取措施\">\n                    <Select defaultValue={OPTION_ALL} onChange={this.onActionFilterChange}>\n                        { getOptions(ISSUE_ACTIONS) }\n                    </Select>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"案件状态\">\n                    <Select defaultValue={OPTION_ALL} onChange={this.onIssueStatusChange}>\n                        { getOptions([MESSAGE.Complete, MESSAGE.NoRisk, MESSAGE.OrangeRisk, MESSAGE.RedRisk, MESSAGE.TimeOut]) }\n                    </Select>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"负责人\">\n                    <Select allowClear onChange={this.onOwnerChange}>\n                        { this.getAllUsersList() }\n                    </Select>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"案件对象\">\n                    <Search placeholder=\"搜索案件对象\" allowClear onChange={this.onSearchTargetName} onSearch={this.onSearchTargetName} />\n                </Descriptions.Item>\n                <Descriptions.Item label=\"登记日期\">\n                    <RangePicker allowClear placeholder={['开始时间', '结束时间']} onChange={this.onStartTimeFilterChange} />\n                </Descriptions.Item>\n                <Descriptions.Item label=\"截止日期\">\n                    <RangePicker allowClear placeholder={['开始时间', '结束时间']} onChange={this.onEndTimeFilterChange} />\n                </Descriptions.Item>\n            </Descriptions>\n        )\n    }\n\n    renderIssueTable = () => {\n        const { currentIssues, users } = this.state;\n        return (\n            <Table className=\"issueList\" dataSource={currentIssues}\n                columns={getIssueColumns(this.getUserNameById, this.handleMarkComplete, this.handleMoveToNextStep,\n                    this.handleDeleteIssue, this.currentUserId, isAdmin(users, this.currentUserId))}\n                rowClassName={ record => 'table-row-status' + record.completeStatus }\n                expandable={{\n                    expandedRowRender: record => (\n                        <Descriptions title={record.issueName} column={3}>\n                            <Descriptions.Item label='负责人'>{this.getUserNameById(record.ownerId)}</Descriptions.Item>\n                            <Descriptions.Item label='案件对象'>{record.targetName}</Descriptions.Item>\n                            <Descriptions.Item label='案件状态'>{record.status === -1 ? '已完成': ISSUE_ACTIONS[record.action].steps[record.status].name}</Descriptions.Item>\n                            <Descriptions.Item label='采取措施'>{ISSUE_ACTIONS[record.action].name}</Descriptions.Item>\n                            <Descriptions.Item label='登记日期'>{new Date(record.startTime).toLocaleDateString()}</Descriptions.Item>\n                            {\n                                record.status === -1 ?\n                                <Descriptions.Item label='完成日期'>{new Date(record.completeTime).toLocaleDateString()}</Descriptions.Item> :\n                                <Descriptions.Item label='截止日期'>{new Date(record.endTime).toLocaleDateString()}</Descriptions.Item>\n                            }\n                            \n                            <Descriptions.Item label='备注' span={3}>{record.details}</Descriptions.Item>\n                        </Descriptions>\n                    )\n                }}\n            />\n        )\n    }\n\n    renderIssueModal = () => {\n        const { issueModalVisible, users } = this.state\n        const currentUser = getById(users, this.currentUserId) || {}\n        const availableActions = getAvailableActions(users, this.currentUserId)\n        return (\n            <Modal closable={false} className=\"issueModal\" title={'添加新案件'} visible={issueModalVisible} footer={null}>\n                <Form ref={this.issueFormRef} labelCol={{span: 5}} wrapperCol={{span: 15}} initialValues={{\n                    issueName: '',\n                    targetName: '',\n                    action: (availableActions.length > 0 && availableActions[0].value) || 0,\n                    startTime: moment(),\n                    details: ''\n                }}>\n                    <Form.Item label=\"案件名称：\" name=\"issueName\" rules={[{\n                        required: true,\n                        message: MESSAGE.EmptyIssueName\n                    }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item label=\"负责人\">{currentUser.name}</Form.Item>\n                    <Form.Item label=\"案件对象\" name=\"targetName\" rules={[{\n                        required: true,\n                        message: '案件对象不能为空！'\n                    }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item label=\"采取措施\" name=\"action\">\n                        <Select>\n                            {getOptions(availableActions, false)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"登记时间\" name=\"startTime\">\n                        <DatePicker />\n                    </Form.Item>\n                    <Form.Item label=\"备注\" name=\"details\">\n                        <TextArea />\n                    </Form.Item>\n                    <Form.Item className=\"buttons\" wrapperCol={{offset: 5, span: 15}}>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleCreateIssue}>创建</Button>\n                        <Button htmlType=\"button\" onClick={this.handleCancelIssue}>取消</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n\n    render() {\n        const { currentIssues, showCurtain, users } = this.state\n        if (users.length === 0) {\n            return null\n        }\n        return (\n            <>\n                <TitleBar isHome={true} showUserManagement={true} currentUserId={this.currentUserId} userList={users} />\n                <div className=\"main\">\n                    { this.renderSummary() }\n                    <div className=\"header\">\n                        <div>案件列表</div>\n                        <div className=\"total\">\n                            <span>{`当前显示${currentIssues.length}个案件`}</span>\n                            <Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={ this.openIssueEditor }>添加新案件</Button>\n                        </div>\n                    </div>\n                    { this.renderFilterSection() }\n                    { this.renderIssueTable() }\n                </div>\n                <Curtain visible={showCurtain} />\n                { this.renderIssueModal() }\n            </>\n        )\n    }\n}\n\nexport default Home\n","import { PureComponent } from \"react\";\nimport { Form, Button, Input, message } from 'antd'\n\nimport './styles.scss'\nimport { login } from \"../../services/auth.service\";\n\nclass Login extends PureComponent {\n    onFinish = async (values) => {\n        try {\n            await login(values.username, values.password)\n            window.location.href = '/home'\n        } catch (ex) {\n            if (ex.code === -1) {\n                message.error(ex.msg)\n            } else {\n                message.error('用户名或密码错误，请重新输入！')\n            }\n        }\n    }\n\n    onFinishFailed = (error) => {\n        console.log('Failed')\n    }\n\n    render() {\n        return (\n            <div className=\"mainForm\">\n                <div className=\"title\">金华海关案件管理系统</div>\n                <Form name=\"loginForm\" className=\"loginForm\" labelCol={{span: 5}} wrapperCol={{span: 15}}\n                    onFinish={this.onFinish} onFinishFailed={this.onFinishFailed} autoComplete=\"off\">\n                    <Form.Item label=\"用户名: \" name=\"username\" rules={[{\n                        required: true,\n                        message: '请输入用户名'\n                    }]}>\n                        <Input placeholder=\"请输入用户名\" />\n                    </Form.Item>\n                    <Form.Item label=\"密码: \" name=\"password\">\n                        <Input.Password placeholder=\"请输入密码\" />\n                    </Form.Item>\n                    <Form.Item className=\"buttons\" wrapperCol={{span: 20}}>\n                        <Button type=\"primary\" htmlType=\"submit\">登录</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import { PureComponent } from \"react\"\nimport { Navigate, Route, Routes } from 'react-router-dom'\n\nimport Admin from './components/Admin'\nimport Home from './components/Home'\nimport Login from './components/Login'\n\nimport './App.scss'\n\nclass App extends PureComponent {\n    render() {\n        return (\n            <Routes>\n                <Route path='/home' element={<Home />} />\n                <Route path='/login' element={<Login />} />\n                <Route path='/admin' element={<Admin />} />\n                <Route path='*' element={<Navigate replace to='/home' />} />\n            </Routes>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\n\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n"],"sourceRoot":""}